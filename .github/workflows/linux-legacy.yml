# Legacy workflow using Ubuntu 18.04 container
name: linux-legacy

on:
  push:
    branches: [ build, test, build-only, linux-legacy ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    environment: build
    if: ${{ !contains(github.event.head_commit.message, '[skip build]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip legacy]') && !contains(github.event.head_commit.message, '[skip linux-legacy]') }}

    steps:
    - name: Install git and curl
      run: |
        apt-get update
        apt-get install -y git curl

    - uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y \
          software-properties-common \
          wget \
          gnupg \
          lsb-release

    - name: Add NodeSource repository
      run: |
        curl -fsSL https://deb.nodesource.com/setup_16.x | bash -

    - name: Install Node.js 16.x
      run: |
        apt-get install -y nodejs

    - name: Install Python 3.8
      run: |
        add-apt-repository ppa:deadsnakes/ppa -y
        apt-get update
        apt-get install -y \
          python3.8 \
          python3.8-dev \
          python3.8-distutils \
          python3-pip

    - name: Set Python 3.8 as default
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
        update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1

    - name: Install GCC 8
      run: |
        apt-get install -y \
          gcc-8 \
          g++-8

    - name: Set GCC 8 as default
      run: |
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100

    - name: Install build dependencies
      run: |
        apt-get install -y \
          build-essential \
          libnss3-dev \
          libsecret-1-dev \
          fakeroot \
          rpm \
          libgtk-3-0 \
          libnotify4 \
          libnss3 \
          libxss1 \
          libxtst6 \
          xdg-utils \
          libatspi2.0-0 \
          libuuid1 \
          libsecret-1-0 \
          libappindicator3-1 \
          ruby-full \
          libgconf-2-4 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0

    - name: Install FPM
      run: gem install fpm

    - name: Verify versions
      run: |
        node --version
        npm --version
        python3 --version
        gcc --version
        g++ --version
        which fpm
        fpm --version

    - name: Install yarn
      run: npm install -g yarn

    - name: Clear electron-builder cache
      run: rm -rf ~/.cache/electron-builder

    - run: npm i -D electron@22.3.27
    - run: npm i -S -E node-pty@0.10.1
    - run: npm i -S -E serialport@10.5.0
    - run: npm i -D vite@4
    - run: npm i -D @electron/rebuild@3.7.2

    - name: Install npm dependencies
      run: npm ci

    - name: Build application
      run: npm run b

    - name: Build legacy packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: node build/bin/build-linux-legacy
