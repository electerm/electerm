name: Update Debian Repository

on:
  release:
    types: [published]
  push:
    branches: [ deb ]
  workflow_dispatch:

jobs:
  update-repo:
    runs-on: ubuntu-latest
    environment: build
    if: |
      github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/deb' && !contains(github.event.head_commit.message, '[skip build]'))
    
    steps:
    - name: Get latest release info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get latest release information
        RELEASE_INFO=$(gh api repos/${{ github.repository }}/releases/latest)
        echo "RELEASE_INFO<<EOF" >> $GITHUB_ENV
        echo "$RELEASE_INFO" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        echo "Release info retrieved for: $(echo "$RELEASE_INFO" | jq -r '.tag_name')"

    - name: Post repository update request
      run: |
        # Prepare JSON payload
        cat > payload.json << EOF
        {
          "releaseInfo": $RELEASE_INFO,
          "gpgKeyId": "${{ secrets.GPG_KEY_ID }}",
          "gpgPrivateKey": "${{ secrets.GPG_PRIVATE_KEY }}"
        }
        EOF
        
        # Post to update URL
        curl -X POST \
          -H "Content-Type: application/json" \
          -d @payload.json \
          "${{ secrets.REPO_UPDATE_URL }}"
        
        # Clean up sensitive file
        rm payload.json
        
        echo "Repository update request sent successfully"
