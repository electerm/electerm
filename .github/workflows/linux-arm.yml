# Alternative workflow using native ARM64 runners (when available)
# This provides better performance and reliability than emulation

name: linux-arm-native

on:
  push:
    branches: [ build, test, build-only ]
  workflow_dispatch:

jobs:
  build:
    # Use Ubuntu 24.04 ARM64 for native ARM64 builds
    runs-on: ubuntu-24.04-arm64
    environment: build
    if: "!contains(github.event.head_commit.message, '[skip build]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip arm-linux]') && !contains(github.event.head_commit.message, '[skip linux3]')"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 16.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    # Install system dependencies for ARM64 builds
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          build-essential \
          libnss3-dev \
          libsecret-1-dev \
          fakeroot \
          rpm \
          ruby \
          ruby-dev \
          rubygems

    # Install native fpm for ARM64
    - name: Install fpm for ARM64
      run: |
        sudo gem install --no-document fpm

    # before_install:
    - run: npm install -g yarn
    - run: npm i

    - name: Build application
      run: npm run b

    - name: Build ARM64 packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ secrets.BUILD_NUMBER }}
      run: node build/bin/build-linux-arm
