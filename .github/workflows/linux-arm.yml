# Alternative workflow using native ARM64 runners (when available)
# This provides better performance and reliability than emulation

name: linux-arm-native

on:
  push:
    branches: [ build, test, build-only ]
  workflow_dispatch:

jobs:
  build:
    # Use GitHub's ARM64 runners when available
    # Fallback to ubuntu-latest with manual arch specification
    runs-on: ubuntu-22.04
    environment: build
    if: "!contains(github.event.head_commit.message, '[skip build]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip arm-linux]') && !contains(github.event.head_commit.message, '[skip linux3]')"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 16.x
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    # Install system dependencies for ARM64 builds
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          build-essential \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libdrm2 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libxss1 \
          libgtk-3-dev \
          libx11-dev \
          libxkbfile-dev \
          libsecret-1-dev \
          fakeroot \
          rpm \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu

    # Set up cross-compilation environment for native modules
    - name: Configure cross-compilation environment
      run: |
        # Set environment variables for cross-compilation
        echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        echo "CXX=aarch64-linux-gnu-g++" >> $GITHUB_ENV
        echo "AR=aarch64-linux-gnu-ar" >> $GITHUB_ENV
        echo "STRIP=aarch64-linux-gnu-strip" >> $GITHUB_ENV
        echo "LINK=aarch64-linux-gnu-g++" >> $GITHUB_ENV
        
        # Set npm configuration for cross-compilation
        npm config set target_arch arm64
        npm config set target_platform linux
        npm config set cache /tmp/.npm
        npm config set python python3

    # before_install:
    - run: npm install -g yarn
    - run: npm i
    - run: npm i -D electron@22.3.27
    - run: npm i -S -E node-pty@1.1.0-beta14
    - run: npm i -S -E serialport@13.0.0
    - run: npm i -D vite@4
    - run: npm i -D @electron/rebuild@3.7.2

    - name: Build application
      run: npm run b

    - name: Build ARM64 packages
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ secrets.BUILD_NUMBER }}
      run: node build/bin/build-linux-arm
